{"version":3,"sources":["components/Greenhouse/images/greenhouse-day.jpg","components/Greenhouse/images/greenhouse-night.jpg","context/ThemeContext.js","components/Greenhouse/LightSwitch.js","context/ClimateContext.js","components/Greenhouse/ClimateStats.js","components/Greenhouse/Greenhouse.js","components/Greenhouse/index.js","components/Navigation/Navigation.js","components/Navigation/index.js","components/Thermometer/Thermometer.js","components/Thermometer/index.js","components/Hygrometer/Hygrometer.js","components/Hygrometer/index.js","App.js","index.js"],"names":["ThemeContext","createContext","useTheme","useContext","ThemeProvider","children","useState","themeName","setThemeName","Provider","value","LightSwitch","className","onClick","ClimateContext","useClimate","ClimateProvider","props","temperature","setTemperature","hygrometer","setHygrometer","desiredTemperature","setDesiredTemperature","desiredHygrometer","setDesiredHygrometer","useEffect","timer","setTimeout","clearTimeout","nextValue","ClimateStats","toFixed","Greenhouse","src","dayImage","nightImage","alt","Navigation","exact","to","Thermometer","ReactSlider","onAfterChange","val","thumbClassName","trackClassName","ariaLabel","orientation","min","max","renderThumb","state","valueNow","renderTrack","index","invert","pearling","minDistance","Hygrometer","App","path","Root","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eedf0a2a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/greenhouse-day.def73286.jpg\";","export default __webpack_public_path__ + \"static/media/greenhouse-night.4fe2c013.jpg\";","import { createContext, useContext, useState } from 'react';\n\nexport const ThemeContext = createContext();\n\nexport const useTheme = () => useContext(ThemeContext);\n\nexport default function ThemeProvider({ children }) {\n  const [themeName, setThemeName] = useState(\"day\");\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        themeName,\n        setThemeName\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n","import './LightSwitch.css';\nimport { useTheme } from '../../context/ThemeContext';\n\nfunction LightSwitch() {\n  const { themeName, setThemeName } = useTheme();\n\n  return (\n    <div className={`light-switch ${themeName}`}>\n      <div className=\"on\" onClick={() => setThemeName('day')}>DAY</div>\n      <div className=\"off\" onClick={() => setThemeName('night')}>NIGHT</div>\n    </div>\n  );\n}\n\nexport default LightSwitch;\n","// Temperature has a default value of 50 degrees\n// Humidity has a default value of 40%\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\n\nexport const ClimateContext = createContext();\n\nexport const useClimate = () => useContext(ClimateContext);\n\nexport const ClimateProvider = (props) => {\n    const [temperature, setTemperature] = useState(50);\n    const [hygrometer, setHygrometer] = useState(40);\n    const [desiredTemperature, setDesiredTemperature] = useState(temperature);\n    const [desiredHygrometer, setDesiredHygrometer] = useState(hygrometer);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (desiredTemperature > temperature) {\n                setTemperature(temperature + 1);\n            } else if (desiredTemperature < temperature) {\n                setTemperature(temperature - 1);\n            };\n        }, 1000);\n        return () => clearTimeout(timer);\n    }, [temperature, desiredTemperature]);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (desiredHygrometer > hygrometer) {\n                const nextValue = hygrometer + hygrometer * 0.02;\n                nextValue > desiredHygrometer ? \n                setHygrometer(desiredHygrometer) :\n                setHygrometer(nextValue);\n            } else if (desiredHygrometer < hygrometer) { \n                const nextValue = hygrometer - hygrometer * 0.02;\n                nextValue < desiredHygrometer ? \n                setHygrometer(desiredHygrometer) :\n                setHygrometer(nextValue);\n            };\n        }, 1000);\n        return () => clearTimeout(timer);\n    }, [hygrometer, desiredHygrometer]);\n\n    return (\n        <ClimateContext.Provider value={{\n            temperature,\n            setTemperature,\n            hygrometer,\n            setHygrometer,\n            desiredTemperature,\n            setDesiredTemperature,\n            desiredHygrometer,\n            setDesiredHygrometer\n        }}>\n            {props.children}\n        </ClimateContext.Provider>\n    )\n};\n","import './ClimateStats.css';\nimport { useClimate } from '../../context/ClimateContext';\n\nfunction ClimateStats() {\n  const { temperature, hygrometer } = useClimate();\n\n  return (\n    <div className=\"climate-stats\">\n      <div className=\"temperature\">\n        Temperature {temperature}°F\n      </div>\n      <div className=\"humidity\">\n        Humidity {hygrometer.toFixed(1)}%\n      </div>\n    </div>\n  )\n}\n\nexport default ClimateStats;\n","import dayImage from './images/greenhouse-day.jpg';\nimport nightImage from './images/greenhouse-night.jpg';\nimport './Greenhouse.css';\n\nimport LightSwitch from './LightSwitch';\nimport ClimateStats from './ClimateStats';\n\nimport { useTheme } from '../../context/ThemeContext';\n\nfunction Greenhouse() {\n  const { themeName } = useTheme();\n  \n  return (\n    <section>\n      <img className='greenhouse-img'\n        src={themeName === 'day' ? dayImage : nightImage}\n        alt='greenhouse'\n      />\n      <LightSwitch />\n      <ClimateStats />\n    </section>\n  );\n}\n\nexport default Greenhouse;\n","import Greenhouse from './Greenhouse';\n\nexport default Greenhouse;\n","import { NavLink } from 'react-router-dom';\n\nimport './Navigation.css';\n\nfunction Navigation() {\n  return (\n    <nav>\n      <NavLink exact to=\"/\">Greenhouse</NavLink>\n      <NavLink to=\"/thermometer\">Thermometer</NavLink>\n      <NavLink to=\"/hygrometer\">Hygrometer</NavLink>\n    </nav>\n  )\n}\n\nexport default Navigation;\n","import Navigation from './Navigation';\n\nexport default Navigation;\n","import ReactSlider from \"react-slider\";\nimport './Thermometer.css';\nimport { useClimate } from \"../../context/ClimateContext\";\n\nfunction Thermometer() {\n  const { temperature, desiredTemperature, setDesiredTemperature } = useClimate();\n\n  return (\n    <section>\n      <h2>Thermometer</h2>\n      <div className=\"actual-temp\">Actual Temperature: {temperature}°F</div>\n      <ReactSlider\n        value={desiredTemperature}\n        onAfterChange={(val) => setDesiredTemperature(val)}\n        className=\"thermometer-slider\"\n        thumbClassName=\"thermometer-thumb\"\n        trackClassName=\"thermometer-track\"\n        ariaLabel={\"Thermometer\"}\n        orientation=\"vertical\"\n        min={0}\n        max={120}\n        renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n        renderTrack={(props, state) => (\n          <div {...props} index={state.index}></div>\n        )}\n        invert\n        pearling\n        minDistance={1}\n      />\n    </section>\n  );\n}\n\nexport default Thermometer;\n","import Thermometer from './Thermometer';\n\nexport default Thermometer;","import ReactSlider from \"react-slider\";\nimport \"./Hygrometer.css\";\nimport { useClimate } from \"../../context/ClimateContext\"\n\nfunction Hygrometer() {\n  const { hygrometer, desiredHygrometer, setDesiredHygrometer } = useClimate();\n\n  return (\n    <section>\n      <h2>Hygrometer</h2>\n      <div className=\"actual-humid\">Actual Humidity: {hygrometer.toFixed(1)}%</div>\n      <ReactSlider\n        value={desiredHygrometer}\n        onAfterChange={(val) => setDesiredHygrometer(val)}\n        className=\"hygrometer-slider\"\n        thumbClassName=\"hygrometer-thumb\"\n        trackClassName=\"hygrometer-track\"\n        ariaLabel={\"Hygrometer\"}\n        orientation=\"vertical\"\n        min={0}\n        max={100}\n        renderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n        renderTrack={(props, state) => (\n          <div {...props} index={state.index}></div>\n        )}\n        invert\n        pearling\n        minDistance={1}\n      />\n    </section>\n  );\n}\n\nexport default Hygrometer;\n","import Hygrometer from \"./Hygrometer\";\n\nexport default Hygrometer;\n","import { Switch, Route } from \"react-router-dom\";\nimport Greenhouse from \"./components/Greenhouse\";\nimport Navigation from \"./components/Navigation\";\nimport Thermometer from \"./components/Thermometer\";\nimport Hygrometer from \"./components/Hygrometer\";\n\nfunction App() {\n  return (\n    <>\n      <Navigation />\n      <Switch>\n        <Route path=\"/thermometer\">\n          <Thermometer />\n        </Route>\n        <Route path=\"/hygrometer\">\n          <Hygrometer />\n        </Route>\n        <Route path=\"/\">\n          <Greenhouse />\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport ThemeProvider from './context/ThemeContext';\nimport { ClimateProvider } from './context/ClimateContext';\n\nfunction Root() {\n  return (\n    <ThemeProvider>\n      <ClimateProvider>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ClimateProvider>\n    </ThemeProvider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}